#![allow(unused)]

//////////////////////////////////=////////////////////////////////=////////////////////////////////
// USE
pub use bevy::prelude::*;

//////////////////////////////////=////////////////////////////////=////////////////////////////////
// MODULES
mod game;
pub use game::*;

//////////////////////////////////=////////////////////////////////=////////////////////////////////
// MAIN
fn main() {
    App::new()
        .add_plugin(GamePlugin)
        .run();
}

//////////////////////////////////=////////////////////////////////=////////////////////////////////
// USE
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// MODULES
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// CONSTANTS
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// PLUGIN
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// BUNDLES
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// ENUMS
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// STRUCTS
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// RESOURCES
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// COMPONENTS
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// STARTUP SYSTEMS
// ^ stsys
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// STATE SYSTEMS
// ^ OnEnter and OnExit ONLY
// ^ onsys
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// EVENT SYSTEMS
// ^ evsys
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// UPDATE SYSTEMS
// ^ sys
//////////////////////////////////=////////////////////////////////=////////////////////////////////
// FUNCTIONS

//================================-================================-================================
// ^ for multiple types in the same category

//-------------------------------- -------------------------------- --------------------------------
// CONSTRUCTORS
//-------------------------------- -------------------------------- --------------------------------
// PROPERTIES
//-------------------------------- -------------------------------- --------------------------------
// IS
//-------------------------------- -------------------------------- --------------------------------
// GET SET